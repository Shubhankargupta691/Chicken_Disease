name: workflow

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-acr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build, tag, and push image to ACR
        id: build-image
        env:
          REGISTRY_NAME: ${{ secrets.ACR_REGISTRY_NAME }}
          REPOSITORY_NAME: ${{ secrets.ACR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          az acr login --name $REGISTRY_NAME
          docker build -t $REGISTRY_NAME.azurecr.io/$REPOSITORY_NAME:$IMAGE_TAG .
          docker push $REGISTRY_NAME.azurecr.io/$REPOSITORY_NAME:$IMAGE_TAG
          echo "::set-output name=image::$REGISTRY_NAME.azurecr.io/$REPOSITORY_NAME:$IMAGE_TAG"

  deploy-to-web-app:
    name: Deploy to Azure Web App
    needs: build-and-push-acr-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App
        run: |
          az webapp config container set --name ${{ secrets.AZURE_WEBAPP_NAME }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --docker-custom-image-name ${{ steps.build-image.outputs.image }} --docker-registry-server-url https://$REGISTRY_NAME.azurecr.io --docker-registry-server-user ${{ secrets.AZURE_REGISTRY_USERNAME }} --docker-registry-server-password ${{ secrets.AZURE_REGISTRY_PASSWORD }}
